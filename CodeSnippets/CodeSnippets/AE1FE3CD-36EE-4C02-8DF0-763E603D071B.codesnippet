<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>breadcrums</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>TopLevel</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>@implementation INLBreadcrumb

+(instancetype)breadcrumbWithController:(UIViewController&lt;INLBreadcrumbCompatibleController&gt; *)controller {
	return [[INLBreadcrumb alloc] initWithController:controller];
}

-(instancetype)initWithController:(UIViewController&lt;INLBreadcrumbCompatibleController&gt; *)controller {
	return [self initWithController:controller manager:[INLBreadcrumbManager defaultManager]];
}

+(instancetype)breadcrumbWithController:(UIViewController&lt;INLBreadcrumbCompatibleController&gt; *)controller manager:(INLBreadcrumbManager *)manager {
	return [[INLBreadcrumb alloc] initWithController:controller manager:manager ? manager : [INLBreadcrumbManager defaultManager]];
}

-(instancetype)initWithController:(UIViewController&lt;INLBreadcrumbCompatibleController&gt; *)controller manager:(INLBreadcrumbManager *)manager {
	if (self = [super init]) {
		self.controller = controller;
		self.manager = manager;
		self.cancelButtonTitle = manager.cancelButtonTitle ? manager.cancelButtonTitle : @"Cancel";
		self.breadcrumbIndicator = manager.breadcrumbIndicator ? manager.breadcrumbIndicator : @" â–¾";
		self.titleView = [UIView viewWithClass:[INLNavbarTitleView class]];
		[self updateTitle];
		
		__weak typeof(self) weakSelf = self;
		self.titleView.onTitleTapped = ^{
			[weakSelf onTitleTapped];
		};
	}
	return self;
}

-(BOOL)isTopBreadcrumb {
	return [self.manager breadcrumbs].count == 0 || [self.manager breadcrumbs][0].controller == self.controller;
}

-(void)onTitleTapped {
	if ([self isTopBreadcrumb]) {
		return;
	}
	UIAlertController * popup = [UIAlertController alertControllerWithTitle:nil message:nil preferredStyle:UIAlertControllerStyleActionSheet];
	
	NSArray&lt;INLBreadcrumb *&gt; * breadcrumbs = [self.manager breadcrumbs];
	for (NSInteger i = breadcrumbs.count-2; 0 &lt;= i; --i) {
		[popup addAction:[UIAlertAction actionWithTitle:breadcrumbs[i].title style:UIAlertActionStyleDefault
			handler:^(UIAlertAction * action) {
				[self.controller.navigationController popToViewController:(UIViewController *)breadcrumbs[i].controller animated:YES];
			}]];		
	}
	[popup addAction:[UIAlertAction actionWithTitle:self.cancelButtonTitle style:UIAlertActionStyleCancel handler:nil]];
	
	popup.popoverPresentationController.sourceView = self.controller.navigationItem.titleView;
	popup.popoverPresentationController.sourceRect = CGRectMake(0, 0,
																self.controller.navigationItem.titleView.frame.size.width,
																self.controller.navigationItem.titleView.frame.size.height);

	[popup setAssociatedProperty:@selector(setupBreadcrumbs) value:@YES];

	[self.controller presentViewController:popup animated:YES completion:nil];
}

-(INLNavbarTitleView *)titleView {
	return (INLNavbarTitleView *)self.controller.navigationItem.titleView;
}

-(void)setTitleView:(INLNavbarTitleView *)titleView {
	self.controller.navigationItem.titleView = titleView;
}

-(void)updateTitle {
	NSString * title = self.title;
	if (![self isTopBreadcrumb] &amp;&amp; self.breadcrumbIndicator) {
		title = [self.title stringByAppendingString:self.breadcrumbIndicator];
	}
	self.titleView.title = title;
}

-(NSString *)title {
	return self.controller.title;
}

-(void)setBreadcrumbIndicator:(NSString *)breadcrumbIndicator {
	_breadcrumbIndicator = breadcrumbIndicator;
	[self updateTitle];
}

@end
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>AE1FE3CD-36EE-4C02-8DF0-763E603D071B</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string>Breadcrumbs should be available to keep users informed,on the navigation</string>
	<key>IDECodeSnippetTitle</key>
	<string>BreadCrums</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
